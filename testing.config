// E.g. to run: NXF_VER=20.11.0-edge nextflow run main.nf -stub -config testing.config

// dry-run parameters

// OK or null
params.checkFqValidity_isok = 'OK'

// OK or null
params.checkBamValidity_isok = 'null'

// sample name (for testing fq dryRun) or fail
params.countReads_runfastp = 'dryRun'

// sample name or fail
params.fastp_enoughreads = 'dryRun'

// sample name or null
params.kraken2_runmykrobe = 'dryRun'

// NOW_DECONTAMINATE_${sample_name} or NOW_ALIGN_TO_REF_${sample_name} or null
params.identifyBacContam_rundecontam = 'NOW_DECONTAMINATE_dryRun'

// sample name or fail
params.downloadContamGenomes_fapass = 'dryRun'

// NOW_ALIGN_TO_REF_${sample_name} or null
params.summary_doWeAlign = 'NOW_ALIGN_TO_REF_dryRun'

// NOW_VARCALL_${sample_name} or null
params.alignToRef_doWeVarCall = 'NOW_VARCALL_dryRun'

// CREATE_ANTIBIOGRAM_${sample_name} or null
params.minos_isSampleTB = 'CREATE_ANTIBIOGRAM_dryRun'

params {

  // help message
  help = ''

  // input directory
  input_dir = "${baseDir}/tests"

  // filetype fastq or bam
  filetype = 'fastq'

  // glob pattern for input files
  pattern = '*_R{1,2}.fastq.gz'

  // unmix myco 'yes' or 'no'
  unmix_myco = 'yes'

  // principal species in each sample, assuming genus Mycobacterium, default null
  // otherwise takes 1 of 10 values: abscessus, africanum, avium, bovis, chelonae, chimaera, fortuitum, intracellulare, kansasii, tuberculosis
  species = 'null'

  // path to kraken2 database
  kraken_db = "s3://tbpipeline/kraken_db/k2_pluspf_16gb_20220607"

  // path to bowtie2 index
  bowtie2_index = "s3://tbpipeline/bowtie2_index/hg19_1kgmaj"

  // name of the bowtie index, e.g. hg19_1kgmaj
  bowtie_index_name = "hg19_1kgmaj"

  // run VCFMIX 'yes' or 'no' (set to no for synthetic samples)
  vcfmix = 'no'

  // run gnomon 'yes' or 'no'
  gnomon = 'no'

  // path to AMR catalogue for gnomon
  // https://github.com/oxfordmmm/tuberculosis_amr_catalogues available at path /tuberculosis_amr_catalogues in container
  amr_cat = "/tuberculosis_amr_catalogues/catalogues/NC_000962.3/NC_000962.3_CRyPTIC_v1.311_GARC1_RUS.csv"

  // path to singularity recipes (needed for getversion)
  sing_dir = "${baseDir}/singularity"


}
