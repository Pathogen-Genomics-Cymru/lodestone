// config for lodestone

manifest {
    name = "pathogen-genomics-cymru/lodestone"
}


trace.overwrite = true
report.overwrite = true

params {

  // help message
  help = ''

  // input directory
  input_dir = ""

  // filetype fastq or bam
  filetype = 'fastq'

  // glob pattern for input files
  pattern = '*_R{1,2}.fastq.gz'

  // output directory
  output_dir = ""

  // unmix myco 'yes' or 'no'
  unmix_myco = 'no'

  // principal species in each sample, assuming genus Mycobacterium, default null
  // otherwise takes 1 of 10 values: abscessus, africanum, avium, bovis, chelonae, chimaera, fortuitum, intracellulare, kansasii, tuberculosis
  species = 'null'

  // path to kraken2 database
  kraken_db = "kraken2"

  // path to bowtie2 index
  bowtie2_index = "bowtie2"

  // name of the bowtie index, e.g. hg19_1kgmaj
  bowtie_index_name = "hg19_1kgmaj"

  // run VCFMIX 'yes' or 'no' (set to no for synthetic samples)
  vcfmix = 'yes'
  
  resistance_profiler = "tb-profiler"

  // path to singularity recipes directory (needed to strip software versions in getversion)
  sing_dir = "${baseDir}/singularity"

  // path to this config file (needed to strip database versions in getversion)
  config_dir = "${baseDir}/nextflow.config"

  // path to the Afanc Myco database
  afanc_myco_db = "${baseDir}/Mycobacteriaciae_DB_7.0/"
  
  //path to resources directory
  resource_dir = "${baseDir}/resources"
  refseq = "${resource_dir}/assembly_summary_refseq.txt"
  container_enabled = "false"
}

profiles {
  climb {
    
    //this is pre-defined in the CLIMB nextflow.config; however it has been added to allow
    //-profile climb to still work outside of CLIMB system (e.g. to access S3 buckets)
    aws {
      profile = "climb"
    client { 
        endpoint = 'https://s3.climb.ac.uk'
        s3PathStyleAccess = true
    }
  }
  
    docker.enabled = true
    fixOwnership = true
    runOptions = "-u \$(id -u):\$(id -g)"

    // define containers for each process
    process {
      k8s {
       pullPolicy = "always"
      }
      withLabel:low_cpu {cpus = 2}
      withLabel:normal_cpu { cpus = 8 }
      withLabel:low_memory { memory = '5GB' }
      withLabel:medium_memory { memory = '10GB' }
      withLabel:high_memory { memory = '18GB' }

      withLabel:preprocessing {
        container = "quay.io/pathogen-genomics-cymru/preprocessing:0.9.8"
      }
      
      withLabel:tbprofiler {
      container = "twhalley93/tb-profiler:latest"
      }
      
      withLabel:getversion{
       executor = "local"
      }
      
      withLabel:afanc_parse{
       executor = "local"
      }
      withName:downloadContamGenomes {
        shell = ['/bin/bash','-u']
        errorStrategy = { task.exitStatus in 100..113 ? 'retry' : 'terminate' }
        maxRetries = 5
      }

      withLabel:retry_afanc {
        shell = ['/bin/bash','-u']
        errorStrategy = {task.exitStatus == 1 ? 'retry' : 'ignore' }
        maxRetries = 5
      }

       withLabel:clockwork {
        container = "quay.io/pathogen-genomics-cymru/clockwork:0.9.8"
      }

      withLabel:vcfpredict {
        container = "quay.io/pathogen-genomics-cymru/vcfpredict:0.9.8"
      }
    }
      params{
          container_enabled = "true"
          
          bowtie2_index = "s3://microbial-bioin-sp3/bowtie_hg19"
          bowtie_index_name = "hg19_1kgmaj"
          kraken_db = "s3://microbial-bioin-sp3/kraken_pluspf_16gb/"
          afanc_myco_db = "s3://microbial-bioin-sp3/Mycobacteriaciae_DB_7.0/"
          
          resource_dir = "s3://microbial-bioin-sp3/lodestone_resources"
          refseq = "${resource_dir}/assembly_summary_refseq.txt"        
      }
  }
  singularity {
  
    params{
    resource_dir = "/resources"
    container_enabled = "true"
    }

    singularity.enabled = 'true'
    singularity.autoMounts = 'true'

    // path to the singularity containers
    singularity.cacheDir = "${baseDir}/singularity"

    process {
      withLabel:low_cpu {cpus = 2}
      withLabel:normal_cpu { cpus = 8 }
      
      withLabel:low_memory { memory = '5GB' }
      withLabel:medium_memory { memory = '10GB' }
      withLabel:high_memory { memory = '18GB' }

      withLabel:getversion {
        container = "quay.io/pathogen-genomics-cymru/preprocessing:0.9.8"
      }

      withLabel:preprocessing {
        container = "quay.io/pathogen-genomics-cymru/preprocessing:0.9.8"
      }
      
      withLabel:tbprofiler {
          container = "twhalley93/tb-profiler:latest"
      }

      withName:downloadContamGenomes {
        shell = ['/bin/bash','-u']
        errorStrategy = { task.exitStatus in 100..113 ? 'retry' : 'terminate' }
        maxRetries = 5
      }

      withLabel:retryAfanc {
        shell = ['/bin/bash','-u']
        // Afanc sometimes fails curl in slurm, retry if so (error is masked as error status 1)
        errorStrategy = {task.exitStatus == 1 ? 'retry' : 'ignore' }
        maxRetries = 5
      }

      withLabel:clockwork {
        container = "quay.io/pathogen-genomics-cymru/clockwork:0.9.8r1"
      }

      withLabel:vcfpredict {
        container = "quay.io/pathogen-genomics-cymru/vcfpredict:0.9.8r1"
      }

    }
  }

  sp3 {

    singularity.enabled = 'true'
    singularity.autoMounts = 'true'

    // path to the singularity containers
    singularity.cacheDir = "/data/images"
    
    params{
    resource_dir = "/resources"
    container_enabled = "true"
    }

    process {
      scratch = true
      errorStrategy = 'ignore'
      
      withLabel:low_cpu {cpus = 2}
      withLabel:normal_cpu { cpus = 8 }
      withLabel:low_memory { memory = '5GB' }
      withLabel:medium_memory { memory = '10GB' }
      withLabel:high_memory { memory = '18GB' }

      withLabel:getversion {
        container = "quay.io/pathogen-genomics-cymru/preprocessing:0.9.8"
      }

      withLabel:preprocessing {
        container = "quay.io/pathogen-genomics-cymru/preprocessing:0.9.8"
      }
      
      withLabel:tbprofiler {
        container = "twhalley93/tb-profiler:latest"
      }

      withName:downloadContamGenomes {
        shell = ['/bin/bash','-u']
        errorStrategy = { task.exitStatus in 100..113 ? 'retry' : 'terminate' }
        maxRetries = 5
      }

      withLabel:retryAfanc {
	shell = ['/bin/bash','-u']
        errorStrategy = {task.exitStatus == 1 ? 'retry' : 'ignore' }
        maxRetries = 5
      }

      withLabel:clockwork {
        container = "quay.io/pathogen-genomics-cymru/clockwork:0.9.8"
      }

      withLabel:vcfpredict {
        container = "quay.io/pathogen-genomics-cymru/vcfpredict:0.9.8r1"
      }
    }
  }


  docker {

    docker.enabled = true
    fixOwnership = true
    runOptions = "-u \$(id -u):\$(id -g)"
    
    params{
    container_enabled = "true"
    resource_dir = "/resources"
    }

    // define containers for each process
    process {
      withLabel:low_cpu {cpus = 2}
      withLabel:normal_cpu { cpus = 8 }
      withLabel:low_memory { memory = '5GB' }
      withLabel:medium_memory { memory = '10GB' }
      withLabel:high_memory { memory = '18GB' }

      withLabel:getversion {
        container = "quay.io/pathogen-genomics-cymru/preprocessing:0.9.8"
      }

      withLabel:preprocessing {
        container = "quay.io/pathogen-genomics-cymru/preprocessing:0.9.8"
      }

      withName:downloadContamGenomes {
        shell = ['/bin/bash','-u']
        errorStrategy = { task.exitStatus in 100..113 ? 'retry' : 'terminate' }
        maxRetries = 5
      }

      withLabel:retryAfanc {
	shell = ['/bin/bash','-u']
        errorStrategy = {task.exitStatus == 1 ? 'retry' : 'ignore' }
        maxRetries = 5
      }

       withLabel:clockwork {
        container = "quay.io/pathogen-genomics-cymru/clockwork:0.9.8"
      }

      withLabel:vcfpredict {
        container = "quay.io/pathogen-genomics-cymru/vcfpredict:0.9.8"
      }
     
      withLabel:tbprofiler {
        container = "twhalley93/tb-profiler:latest"
      }
    }
  }
}
